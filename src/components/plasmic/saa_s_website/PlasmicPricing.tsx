// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: aLuc5FJ4muSJEjCmsd2jqk
// Component: eytUe1vcyvGU9q
import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: Cdu9yYco4mGqIQ/component
import Button from "../../Button"; // plasmic-import: DBhKpuopLwsn-/component
import Footer from "../../Footer"; // plasmic-import: zRW2oir-oc_kkO/component

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_saa_s_website.module.css"; // plasmic-import: aLuc5FJ4muSJEjCmsd2jqk/projectcss
import sty from "./PlasmicPricing.module.css"; // plasmic-import: eytUe1vcyvGU9q/css

import Icon14Icon from "./icons/PlasmicIcon__Icon14"; // plasmic-import: X11akyThdogT-0/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: wzhID7krtZ3VKP/icon
import ArrowRightsvgIcon from "./icons/PlasmicIcon__ArrowRightsvg"; // plasmic-import: AAVZDp-i71oUAH/icon

export type PlasmicPricing__VariantMembers = {};
export type PlasmicPricing__VariantsArgs = {};
type VariantPropType = keyof PlasmicPricing__VariantsArgs;
export const PlasmicPricing__VariantProps = new Array<VariantPropType>();

export type PlasmicPricing__ArgsType = {};
type ArgPropType = keyof PlasmicPricing__ArgsType;
export const PlasmicPricing__ArgProps = new Array<ArgPropType>();

export type PlasmicPricing__OverridesType = {
  root?: p.Flex<"div">;
  header?: p.Flex<typeof Header>;
  foreground?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  faQs?: p.Flex<"div">;
  container5?: p.Flex<"div">;
  columns?: p.Flex<"div">;
  accordion4?: p.Flex<"div">;
  accordion8?: p.Flex<"div">;
  accordion9?: p.Flex<"div">;
  accordion10?: p.Flex<"div">;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultPricingProps {
  className?: string;
}

function PlasmicPricing__RenderFunc(props: {
  variants: PlasmicPricing__VariantsArgs;
  args: PlasmicPricing__ArgsType;
  overrides: PlasmicPricing__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  return (
    <React.Fragment>
      {}

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <div className={classNames(projectcss.all, sty.freeBox__kbExn)}>
            <div className={classNames(projectcss.all, sty.freeBox__cpNlN)}>
              <div className={classNames(projectcss.all, sty.freeBox__dvjf)} />

              <p.Stack
                as={"div"}
                data-plasmic-name={"foreground"}
                data-plasmic-override={overrides.foreground}
                hasGap={true}
                className={classNames(projectcss.all, sty.foreground)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___09Of3)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ry331)}
                  >
                    <h1
                      data-plasmic-name={"h1"}
                      data-plasmic-override={overrides.h1}
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1
                      )}
                    >
                      {"Pricing plans"}
                    </h1>
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vC5U
                    )}
                  >
                    {
                      "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                    }
                  </div>
                </p.Stack>

                <div className={classNames(projectcss.all, sty.freeBox___2C69)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__tScgd)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__zIlI)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___7Rk3H
                        )}
                      >
                        {"Starter"}
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__rk3A0
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__fxjpp
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xN0UC
                            )}
                          >
                            {"$"}
                          </div>

                          <h2
                            className={classNames(
                              projectcss.all,
                              projectcss.h2,
                              projectcss.__wab_text,
                              sty.h2__nIqqG
                            )}
                          >
                            {"8"}
                          </h2>
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__aba9I
                          )}
                        >
                          {"/month"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__qoxvf)}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__j7Lhm)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___7Pekk
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___8LQno
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ndDd3
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__t87If
                              )}
                              role={"img"}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__qy4El
                              )}
                            >
                              <Icon14Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__a1BdT
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__pd6Im
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__lRdAh
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__kr1KW
                              )}
                            >
                              {
                                "Vestibulum mollis odio dictum ultrices facilisis molestie vestibulum"
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__dz1S3
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__uflNg
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg___8Casz
                              )}
                              role={"img"}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__fYetw
                              )}
                            >
                              <Icon14Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__nIsb8
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__eo3Cm
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__a04CX
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__sSAdh
                              )}
                            >
                              {"Mus consequat a justo"}
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__o9Qt0
                          )}
                        >
                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.button__j19Zl
                            )}
                            endIcon={
                              <ArrowRightsvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__hy2Ye
                                )}
                                role={"img"}
                              />
                            }
                            showEndIcon={true}
                          >
                            {"Buy starter"}
                          </Button>
                        </div>
                      ) : null}
                    </p.Stack>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox___2HMnz)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__moWl5)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mUjta
                        )}
                      >
                        {"Pro"}
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___9Clbf
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ydKd
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__piCu9
                            )}
                          >
                            {"$"}
                          </div>

                          <h2
                            className={classNames(
                              projectcss.all,
                              projectcss.h2,
                              projectcss.__wab_text,
                              sty.h2___9GseQ
                            )}
                          >
                            {"16"}
                          </h2>
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__rt9C3
                          )}
                        >
                          {"/month"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__mqjox)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__g23Oh
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___8OoDn
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__rizHb
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__wvQh
                              )}
                              role={"img"}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__be68
                              )}
                            >
                              <Icon14Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__zlqM
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__jdKt5
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__abVxB
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__plMy
                              )}
                            >
                              {
                                "Ligula primis mollis sem dignissim semper lectus parturient"
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__tx0Qx
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__jT4Ex
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__dRhmC
                              )}
                              role={"img"}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__eg4Eo
                              )}
                            >
                              <Icon14Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__kthi1
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__rWlX8
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___19Hxf
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ey6Yz
                              )}
                            >
                              {"A curabitur dignissim pharetra porta suscipit"}
                            </div>
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__mX6UD
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__z2R6H
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__x1Q9H
                              )}
                              role={"img"}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__joAt9
                              )}
                            >
                              <Icon14Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___0JNu8
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___2NPm
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___2ClJ8
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__jdEn
                              )}
                            >
                              {
                                "Condimentum diam a et sapien praesent potenti torquent a eros"
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___6IQae
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__tkPIz
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__s7BA
                              )}
                              role={"img"}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__i83K9
                              )}
                            >
                              <Icon14Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__ev7VP
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__touBn
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__js1Kq
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__wkPgO
                              )}
                            >
                              {"Conubia in hac eu elementum sodales"}
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__pqPTz
                        )}
                      >
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__tzTc
                          )}
                          color={"blue" as const}
                          endIcon={
                            <ArrowRightsvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__am12T
                              )}
                              role={"img"}
                            />
                          }
                          shape={"rounded" as const}
                          showEndIcon={true}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__nw1Qg
                            )}
                          >
                            {"Buy pro"}
                          </div>
                        </Button>
                      </div>
                    </p.Stack>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__mMsEc)}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__vNdq8)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__rMide)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___3HVn
                        )}
                      >
                        {"Team"}
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___8SSuu
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__qObD9
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ctzXf
                            )}
                          >
                            {"$"}
                          </div>

                          <h2
                            className={classNames(
                              projectcss.all,
                              projectcss.h2,
                              projectcss.__wab_text,
                              sty.h2__xKtpR
                            )}
                          >
                            {"10"}
                          </h2>
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__j9Y67
                          )}
                        >
                          {"/member"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__fedfh)}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__w2Iq)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___6Pfvu
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___1R4UW
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__m8Pc4
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__qiXbI
                              )}
                              role={"img"}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___0ZlAo
                              )}
                            >
                              <Icon14Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__p2C0K
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___0Mw7G
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__taV7I
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__u6LUw
                              )}
                            >
                              {"Ad nam curae a potenti platea"}
                            </div>
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ovCcg
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__z3Vaw
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__pg5Sn
                              )}
                              role={"img"}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__yxXdJ
                              )}
                            >
                              <Icon14Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__tyI0
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___0EOa
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__lsDd
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__x3G3M
                              )}
                            >
                              {
                                "A adipiscing scelerisque pretium consectetur sem"
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>

                        {true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__mdu1P
                            )}
                          >
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__zw4Mi
                              )}
                              endIcon={
                                <ArrowRightsvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__mtekD
                                  )}
                                  role={"img"}
                                />
                              }
                              showEndIcon={true}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___6ZNcY
                                )}
                              >
                                {"Buy Team"}
                              </div>
                            </Button>
                          </div>
                        ) : null}
                      </p.Stack>
                    </p.Stack>
                  </div>
                </div>
              </p.Stack>
            </div>
          </div>

          <div
            data-plasmic-name={"faQs"}
            data-plasmic-override={overrides.faQs}
            className={classNames(projectcss.all, sty.faQs)}
          >
            <div
              data-plasmic-name={"container5"}
              data-plasmic-override={overrides.container5}
              className={classNames(projectcss.all, sty.container5)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__xywIw
                )}
              >
                {"FAQ"}
              </h2>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__zQdKs
                )}
              >
                {
                  "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                }
              </div>
            </div>

            <p.Stack
              as={"div"}
              data-plasmic-name={"columns"}
              data-plasmic-override={overrides.columns}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns)}
            >
              <div className={classNames(projectcss.all, sty.column__eHa7)}>
                <div
                  data-plasmic-name={"accordion4"}
                  data-plasmic-override={overrides.accordion4}
                  className={classNames(projectcss.all, sty.accordion4)}
                >
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__tcYuu
                    )}
                  >
                    {"The standard Lorem Ipsum passage, used since the 1500s"}
                  </h5>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___29PMr
                    )}
                  >
                    {
                      "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                    }
                  </div>
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.column___6Qfcf)}>
                <div
                  data-plasmic-name={"accordion8"}
                  data-plasmic-override={overrides.accordion8}
                  className={classNames(projectcss.all, sty.accordion8)}
                >
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__psuTk
                    )}
                  >
                    {"The standard Lorem Ipsum passage, used since the 1500s"}
                  </h5>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kCkGz
                    )}
                  >
                    {
                      "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                    }
                  </div>
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.column___30XRl)}>
                <div
                  data-plasmic-name={"accordion9"}
                  data-plasmic-override={overrides.accordion9}
                  className={classNames(projectcss.all, sty.accordion9)}
                >
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__rj4Wg
                    )}
                  >
                    {"The standard Lorem Ipsum passage, used since the 1500s"}
                  </h5>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rxtQg
                    )}
                  >
                    {
                      "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                    }
                  </div>
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.column__hGmuZ)}>
                <div
                  data-plasmic-name={"accordion10"}
                  data-plasmic-override={overrides.accordion10}
                  className={classNames(projectcss.all, sty.accordion10)}
                >
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__iLgX6
                    )}
                  >
                    {"The standard Lorem Ipsum passage, used since the 1500s"}
                  </h5>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lpOwA
                    )}
                  >
                    {
                      "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                    }
                  </div>
                </div>
              </div>
            </p.Stack>
          </div>

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "foreground",
    "h1",
    "faQs",
    "container5",
    "columns",
    "accordion4",
    "accordion8",
    "accordion9",
    "accordion10",
    "footer"
  ],
  header: ["header"],
  foreground: ["foreground", "h1"],
  h1: ["h1"],
  faQs: [
    "faQs",
    "container5",
    "columns",
    "accordion4",
    "accordion8",
    "accordion9",
    "accordion10"
  ],
  container5: ["container5"],
  columns: ["columns", "accordion4", "accordion8", "accordion9", "accordion10"],
  accordion4: ["accordion4"],
  accordion8: ["accordion8"],
  accordion9: ["accordion9"],
  accordion10: ["accordion10"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: typeof Header;
  foreground: "div";
  h1: "h1";
  faQs: "div";
  container5: "div";
  columns: "div";
  accordion4: "div";
  accordion8: "div";
  accordion9: "div";
  accordion10: "div";
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicPricing__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicPricing__VariantsArgs;
    args?: PlasmicPricing__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicPricing__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicPricing__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicPricing__ArgProps,
          internalVariantPropNames: PlasmicPricing__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicPricing__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPricing";
  } else {
    func.displayName = `PlasmicPricing.${nodeName}`;
  }
  return func;
}

export const PlasmicPricing = Object.assign(
  // Top-level PlasmicPricing renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    foreground: makeNodeComponent("foreground"),
    h1: makeNodeComponent("h1"),
    faQs: makeNodeComponent("faQs"),
    container5: makeNodeComponent("container5"),
    columns: makeNodeComponent("columns"),
    accordion4: makeNodeComponent("accordion4"),
    accordion8: makeNodeComponent("accordion8"),
    accordion9: makeNodeComponent("accordion9"),
    accordion10: makeNodeComponent("accordion10"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicPricing
    internalVariantProps: PlasmicPricing__VariantProps,
    internalArgProps: PlasmicPricing__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicPricing;
/* prettier-ignore-end */
